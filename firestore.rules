rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Базовые правила доступа
    match /{document=**} {
      allow read, write: if false;
    }

    // Правила для проектов
    match /projects/{id} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == request.resource.data.ownerId;
    }

    // Правила для профилей сетей
    match /networkingProfiles/{uid} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == uid;
    }

    // Правила для заявок
    match /applications/{id} {
      allow create: if request.auth.uid == request.resource.data.fromUid;
      allow read: if request.auth.uid in [resource.data.fromUid, 
                                       get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.ownerId];
      allow update: if request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.ownerId;
    }

    // Правила для матчей
    match /matches/{uid}/{matchId} {
      allow read: if request.auth.uid == uid;
    }

    // Правила для очереди матчей (только для админов и серверных функций)
    match /matchJobs/{id} {
      allow read, write: if false; // Только через Cloud Functions
    }

    // Правила для отзеркаленных матчей проектов
    match /matchesProjects/{projectId}/{matchId} {
      allow read: if request.auth.uid == get(/databases/$(database)/documents/projects/$(projectId)).data.ownerId;
    }

    // Правила для чатов
    match /chats/{chatId} {
      allow read: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants;
    }

    // Правила для сообщений в чатах
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      allow create: if request.auth.uid == request.resource.data.senderId && 
                    request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
  }
} 